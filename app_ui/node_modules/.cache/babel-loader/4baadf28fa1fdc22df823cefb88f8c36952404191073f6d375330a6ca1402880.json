{"ast":null,"code":"var _jsxFileName = \"/Users/ramsankar/Documents/courses/CSCE_679/IPL_Analytics/app_ui/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activeTab, setActiveTab] = useState('Player Stats');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cricket Visualizations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'Player Stats' ? 'active' : '',\n        onClick: () => setActiveTab('Player Stats'),\n        children: \"Player Stats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'Team Stats' ? 'active' : '',\n        onClick: () => setActiveTab('Team Stats'),\n        children: \"Team Stats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'Match Stats' ? 'active' : '',\n        onClick: () => setActiveTab('Match Stats'),\n        children: \"Match Stats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visualization-grids\",\n      children: [activeTab === 'Player Stats' && /*#__PURE__*/_jsxDEV(PlayerStatsGrid, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 42\n      }, this), activeTab === 'Team Stats' && /*#__PURE__*/_jsxDEV(TeamStatsGrid, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 40\n      }, this), activeTab === 'Match Stats' && /*#__PURE__*/_jsxDEV(MatchStatsGrid, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3uaDK9jRyZIbLRDhuKYPJ6rsGNI=\");\n_c = App;\nexport function PlayerStatsGrid() {\n  // Generate random data for the bar charts\n  const generateRandomData = () => {\n    return Array.from({\n      length: 5\n    }, () => Math.floor(Math.random() * 100));\n  };\n\n  // Create a function to render a bar chart\n  const renderBarChart = (canvas, data) => {\n    const ctx = canvas.getContext('2d');\n    new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: ['Category 1', 'Category 2', 'Category 3', 'Category 4', 'Category 5'],\n        datasets: [{\n          label: 'Data',\n          data: data,\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-stats-grid\",\n    children: [0, 1, 2, 3].map(gridIndex => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-item\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: `chart-${gridIndex}`,\n        width: \"400\",\n        height: \"200\",\n        ref: canvas => {\n          // Render the chart on the canvas element\n          if (canvas) {\n            const data = generateRandomData();\n            renderBarChart(canvas, data);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, gridIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_c2 = PlayerStatsGrid;\nfunction TeamStatsGrid() {\n  // Implement the Team Stats grid here\n}\n_c3 = TeamStatsGrid;\nfunction MatchStatsGrid() {\n  // Implement the Match Stats grid here\n}\n_c4 = MatchStatsGrid;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"PlayerStatsGrid\");\n$RefreshReg$(_c3, \"TeamStatsGrid\");\n$RefreshReg$(_c4, \"MatchStatsGrid\");","map":{"version":3,"names":["React","useState","Chart","jsxDEV","_jsxDEV","App","_s","activeTab","setActiveTab","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","PlayerStatsGrid","TeamStatsGrid","MatchStatsGrid","_c","generateRandomData","Array","from","length","Math","floor","random","renderBarChart","canvas","data","ctx","getContext","type","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","scales","y","beginAtZero","map","gridIndex","id","width","height","ref","_c2","_c3","_c4","$RefreshReg$"],"sources":["/Users/ramsankar/Documents/courses/CSCE_679/IPL_Analytics/app_ui/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport './App.css';\n\nfunction App() {\n  const [activeTab, setActiveTab] = useState('Player Stats');\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Cricket Visualizations</h1>\n      </header>\n      <div className=\"tabs\">\n        <button\n          className={activeTab === 'Player Stats' ? 'active' : ''}\n          onClick={() => setActiveTab('Player Stats')}\n        >\n          Player Stats\n        </button>\n        <button\n          className={activeTab === 'Team Stats' ? 'active' : ''}\n          onClick={() => setActiveTab('Team Stats')}\n        >\n          Team Stats\n        </button>\n        <button\n          className={activeTab === 'Match Stats' ? 'active' : ''}\n          onClick={() => setActiveTab('Match Stats')}\n        >\n          Match Stats\n        </button>\n      </div>\n      <div className=\"visualization-grids\">\n        {/* Render the appropriate component based on the active tab */}\n        {activeTab === 'Player Stats' && <PlayerStatsGrid />}\n        {activeTab === 'Team Stats' && <TeamStatsGrid />}\n        {activeTab === 'Match Stats' && <MatchStatsGrid />}\n      </div>\n    </div>\n  );\n}\n\nexport function PlayerStatsGrid() {\n  // Generate random data for the bar charts\n  const generateRandomData = () => {\n    return Array.from({ length: 5 }, () => Math.floor(Math.random() * 100));\n  };\n\n  // Create a function to render a bar chart\n  const renderBarChart = (canvas, data) => {\n    const ctx = canvas.getContext('2d');\n    new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: ['Category 1', 'Category 2', 'Category 3', 'Category 4', 'Category 5'],\n        datasets: [\n          {\n            label: 'Data',\n            data: data,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          y: {\n            beginAtZero: true,\n          },\n        },\n      },\n    });\n  };\n\n  return (\n    <div className=\"player-stats-grid\">\n      {[0, 1, 2, 3].map((gridIndex) => (\n        <div key={gridIndex} className=\"grid-item\">\n          <canvas\n            id={`chart-${gridIndex}`}\n            width=\"400\"\n            height=\"200\"\n            ref={(canvas) => {\n              // Render the chart on the canvas element\n              if (canvas) {\n                const data = generateRandomData();\n                renderBarChart(canvas, data);\n              }\n            }}\n          ></canvas>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction TeamStatsGrid() {\n  // Implement the Team Stats grid here\n}\n\nfunction MatchStatsGrid() {\n  // Implement the Match Stats grid here\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}